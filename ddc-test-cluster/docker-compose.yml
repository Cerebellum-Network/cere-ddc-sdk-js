version: "3.4"

services:
  cere-chain:
    platform: linux/amd64
    container_name: cere-chain
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/pos-network-node:v4.7.0"
    command: bash -c "/usr/local/bin/cere --dev --alice --ws-external --rpc-external"
    ports:
      - "9944:9944"
      - "9933:9933"

  ddc-cdn-node:
    platform: linux/amd64
    container_name: "ddc-cdn-node"
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/ddc-cdn-node:dev-latest"
    environment:
      - 'HTTP_PORT=8080'
      - 'HTTP_ADDRESS=http://localhost:8080'
      - 'LOG_LEVEL=debug'
      - 'LOG_JSON_FORMAT=false'
      - 'TEST_ENABLED=true'
    ports:
      - '8080:8080'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/info || exit 1
      interval: 3s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  ddc-storage-node-0:
    platform: linux/amd64
    container_name: "ddc-storage-node-0"
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/ddc-storage-node:dev-latest"
    environment:
      - 'HTTP_PORT=8090'
      - 'HTTP_ADDRESS=http://localhost:8090'
      - 'LOG_LEVEL=info'
      - 'LOG_JSON_FORMAT=false'
      - 'TEST_ENABLED=true'
    ports:
      - '8090:8090'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8090/info || exit 1
      interval: 3s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  ddc-storage-node-1:
    platform: linux/amd64
    container_name: "ddc-storage-node-1"
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/ddc-storage-node:dev-latest"
    environment:
      - 'HTTP_PORT=8091'
      - 'HTTP_ADDRESS=http://localhost:8091'
      - 'LOG_LEVEL=info'
      - 'LOG_JSON_FORMAT=false'
      - 'TEST_ENABLED=true'
    ports:
      - '8091:8091'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8091/info || exit 1
      interval: 3s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  ddc-storage-node-2:
    platform: linux/amd64
    container_name: "ddc-storage-node-2"
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/ddc-storage-node:dev-latest"
    environment:
      - 'HTTP_PORT=8092'
      - 'HTTP_ADDRESS=http://localhost:8092'
      - 'LOG_LEVEL=info'
      - 'LOG_JSON_FORMAT=false'
      - 'TEST_ENABLED=true'
    ports:
      - '8092:8092'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8092/info || exit 1
      interval: 3s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  ddc-storage-node-3:
    platform: linux/amd64
    container_name: "ddc-storage-node-3"
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/ddc-storage-node:dev-latest"
    environment:
      - 'HTTP_PORT=8093'
      - 'HTTP_ADDRESS=http://localhost:8093'
      - 'LOG_LEVEL=info'
      - 'LOG_JSON_FORMAT=false'
      - 'TEST_ENABLED=true'
    ports:
      - '8093:8093'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8093/info || exit 1
      interval: 3s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  ddc-storage-node-6:
    platform: linux/amd64
    container_name: "ddc-storage-node-6"
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/ddc-storage-node:dev-latest"
    environment:
      - 'HTTP_PORT=8096'
      - 'HTTP_ADDRESS=http://localhost:8096'
      - 'LOG_LEVEL=info'
      - 'LOG_JSON_FORMAT=false'
      - 'TEST_ENABLED=true'
    ports:
      - '8096:8096'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8096/info || exit 1
      interval: 3s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: 625402836641.dkr.ecr.us-west-2.amazonaws.com/dac-redis:dev-latest
    container_name: redis
    healthcheck:
      test: ["CMD-SHELL", "/healthchecker-runner.sh || exit 1"]
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 5
    ports:
      - "6379:6379"

  webdis:
    image: nicolas/webdis:0.1.21
    container_name: webdis
    environment:
      REDIS_HOST: redis
    ports:
      - "7379:7379"

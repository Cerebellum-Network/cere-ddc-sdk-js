version: "3.4"

services:
  ddc-cdn-node-0:
    platform: linux/amd64
    container_name: ddc-cdn-node-0
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/ddc-cdn-node:dev-latest"
    environment:
      - 'HTTP_PORT=8080'
      - 'HTTP_ADDRESS=http://${HOST_IP}:8080'
      - 'LOG_LEVEL=debug'
      - 'LOG_JSON_FORMAT=false'
      - 'NODE_SECRET_PHRASE=//Bob'
      - "DDC_STORAGE_URL=http://ddc-storage-node-0:8090"
      - "BLOCKCHAIN_API_URL=${BLOCKCHAIN_API_URL}"
      - "BLOCKCHAIN_DDC_BUCKET_CONTRACT=${BLOCKCHAIN_DDC_BUCKET_CONTRACT}"
      - "CLUSTER_ID=${CLUSTER_ID}"
      - "TEST_ENABLED=false"
    ports:
      - '8080:8080'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://${HOST_IP}:8080/info || exit 1
      interval: 3s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  ddc-cdn-node-1:
    platform: linux/amd64
    container_name: ddc-cdn-node-1
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/ddc-cdn-node:dev-latest"
    environment:
      - 'HTTP_PORT=8081'
      - 'HTTP_ADDRESS=http://${HOST_IP}:8081'
      - 'LOG_LEVEL=debug'
      - 'LOG_JSON_FORMAT=false'
      - 'NODE_SECRET_PHRASE=//Dave'
      - "DDC_STORAGE_URL=http://ddc-storage-node-1:8091"
      - "BLOCKCHAIN_API_URL=${BLOCKCHAIN_API_URL}"
      - "BLOCKCHAIN_DDC_BUCKET_CONTRACT=${BLOCKCHAIN_DDC_BUCKET_CONTRACT}"
      - "CLUSTER_ID=${CLUSTER_ID}"
      - "TEST_ENABLED=false"
    ports:
      - '8081:8081'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://${HOST_IP}:8081/info || exit 1
      interval: 3s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  ddc-storage-node-0:
    platform: linux/amd64
    container_name: ddc-storage-node-0
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/ddc-storage-node:dev-latest"
    environment:
      - 'HTTP_PORT=8090'
      - 'HTTP_ADDRESS=http://ddc-storage-node-0:8090'
      - 'LOG_LEVEL=info'
      - 'LOG_JSON_FORMAT=false'
      - 'NODE_SECRET_PHRASE=//Eve'
      - "DDC_BUCKET_CONTRACT_API_URL=${BLOCKCHAIN_API_URL}"
      - "DDC_BUCKET_CONTRACT_ACCOUNT_ID=${BLOCKCHAIN_DDC_BUCKET_CONTRACT}"
      - "CLUSTER_ID=${CLUSTER_ID}"
      - "DHT_ENABLED=false"
      - "TEST_ENABLED=false"
    ports:
      - '8090:8090'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://${HOST_IP}:8090/info || exit 1
      interval: 3s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  ddc-storage-node-1:
    platform: linux/amd64
    container_name: ddc-storage-node-1
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/ddc-storage-node:dev-latest"
    environment:
      - 'HTTP_PORT=8091'
      - 'HTTP_ADDRESS=http://ddc-storage-node-1:8091'
      - 'LOG_LEVEL=info'
      - 'LOG_JSON_FORMAT=false'
      - 'NODE_SECRET_PHRASE=//Ferdie'
      - "DDC_BUCKET_CONTRACT_API_URL=${BLOCKCHAIN_API_URL}"
      - "DDC_BUCKET_CONTRACT_ACCOUNT_ID=${BLOCKCHAIN_DDC_BUCKET_CONTRACT}"
      - "CLUSTER_ID=${CLUSTER_ID}"
      - "DHT_ENABLED=false"
      - "TEST_ENABLED=false"
    ports:
      - '8091:8091'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://${HOST_IP}:8091/info || exit 1
      interval: 3s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  ddc-storage-node-2:
    platform: linux/amd64
    container_name: ddc-storage-node-2
    image: "625402836641.dkr.ecr.us-west-2.amazonaws.com/ddc-storage-node:dev-latest"
    environment:
      - 'HTTP_PORT=8092'
      - 'HTTP_ADDRESS=http://ddc-storage-node-2:8092'
      - 'LOG_LEVEL=info'
      - 'LOG_JSON_FORMAT=false'
      - 'NODE_SECRET_PHRASE=//Charlie'
      - "DDC_BUCKET_CONTRACT_API_URL=${BLOCKCHAIN_API_URL}"
      - "DDC_BUCKET_CONTRACT_ACCOUNT_ID=${BLOCKCHAIN_DDC_BUCKET_CONTRACT}"
      - "CLUSTER_ID=${CLUSTER_ID}"
      - "DHT_ENABLED=false"
      - "TEST_ENABLED=false"
    ports:
      - '8092:8092'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://${HOST_IP}:8092/info || exit 1
      interval: 3s
      timeout: 1s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: 625402836641.dkr.ecr.us-west-2.amazonaws.com/dac-redis:dev-latest
    container_name: redis
    healthcheck:
      test: ["CMD-SHELL", "/healthchecker-runner.sh || exit 1"]
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 5
    ports:
      - "6379:6379"

  webdis:
    image: nicolas/webdis:0.1.21
    container_name: webdis
    environment:
      REDIS_HOST: redis
    ports:
      - "7379:7379"
